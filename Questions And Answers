# Data Types:
# 1. What are the different data types in Python?
# - The different data types in Python include integers, floats, strings, booleans, lists, tuples, and dictionaries.

# 2. How do you convert a string to an integer in Python?
# - You can use the int() function to convert a string to an integer in Python.

# 3. What is the difference between a list and a tuple in Python?
# - Lists are mutable, meaning their elements can be changed, added, or removed. Tuples, on the other hand, are immutable and cannot be modified once created.

# 4. How do you check the data type of a variable in Python?
#- You can use the type() function to check the data type of a variable in Python.

# 5. What is the purpose of the None data type in Python?
# - The None data type represents the absence of a value. It is often used to indicate the absence of a return value in functions.

#Operators:
#1. What is the difference between the '==' and 'is' operators in Python?
# - The '==' operator checks for equality of values, while the 'is' operator checks for object identity.

# 2. How do you perform exponentiation in Python?
# - You can use the double asterisk (*) operator to perform exponentiation in Python. For example, 2 * 3 will give you 8.

# 3. What is the use of the 'in' operator in Python?
# - The 'in' operator is used to check if a value is present in a sequence, such as a string, list, or tuple.

# 4. How do you concatenate two strings in Python?
# - You can use the plus (+) operator to concatenate two strings in Python. For example, "Hello" + "World" will give you "HelloWorld".

#5. What is the difference between the '/' and '//' operators in Python?
# - The '/' operator performs normal division and returns a float result, while the '//' operator performs floor division and returns an integer result.

# Conditional Statements:
# 1. How do you write an if statement in Python?
# - You can write an if statement in Python using the following syntax:

# if condition:
    # code to be executed if the condition is true


# 2. What is the purpose of the 'elif' keyword in Python?
# - The 'elif

# Looping Statements:
# 1. What is the difference between a 'for' loop and a 'while' loop in Python?
# - A 'for' loop is used to iterate over a sequence or collection, while a 'while' loop is used to repeatedly execute a block of code as long as a condition is true.

# 2. How do you break out of a loop in Python?
# - You can use the 'break' keyword to exit a loop prematurely.

# 3. What is the purpose of the 'continue' keyword in Python?
# - The 'continue' keyword is used to skip the rest of the current iteration and move to the next iteration of a loop.

# 4. How do you iterate over a dictionary in Python?
# - You can use a 'for' loop to iterate over the keys, values, or items of a dictionary using the 'keys()', 'values()', or 'items()' methods, respectively.

# 5. What is an infinite loop in Python?
# - An infinite loop is a loop that continues to execute indefinitely because its exit condition is never met or it lacks an exit condition.

# Functions:
# 1. How do you define a function in Python?
# - You can define a function in Python using the 'def' keyword followed by the function name, parentheses for parameters, and a colon to start the function body.

# 2. What is the purpose of the 'return' statement in a function?
# - The 'return' statement is used to specify the value that a function should return when it is called. It also terminates the function execution.

# 3. How do you pass arguments to a function in Python?
# - You can pass arguments to a function by including them within the parentheses when calling the function.

# 4. What is a default parameter in Python?
# - A default parameter is a parameter that has a default value specified in the function definition. If no value is provided for that parameter when calling the function, the default value is used.

# 5. How do you call a function in Python?
# - You can call a function by using its name followed by parentheses, optionally passing any required arguments.